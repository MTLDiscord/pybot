
import discord
from discord.ui import Button, View
from discord.ext import commands
from discord.utils import get




class rules(commands.Cog, discord.ui.View):
    def __init__(self, bot):
        self.bot = bot

    @commands.command()
    async def rules(self, ctx: commands.Context):
        embedRules = discord.Embed(title="Правила сервера Polunna Community!", description=" ", color=0x7289DA)
        embedRules.add_field(name="Общение на нашем сервере является свободным, но для поддержания комфортной атмосферы мы просим вас соблюдать следующие правила ⬇️\nОбщее положение:", value="```Java\n1. Пользователи должны уважительно относиться к друг другу. Оскорбления и разжигания конфликтов запрещены.\n2. Нельзя упоминать (@name) других людей без надобности.\n3. Необходимо соблюдать правила текстовых каналов. Обычно они написаны в закрепленных сообщениях.\n4. Запрещено вторжение в частную жизнь пользователя или распространение персональных данных пользователя/переписок с ним без наличия согласия с его стороны. 5. Запрещено распространение вредоносного контента(вирусные ссылки, стиллеры, ратники и т.п.).\n6. Запрещена реклама сторонних ресурсов без согласования с администрацией сервера.\n7. Запрещено разводить политические 'срачи' в любом виде.\n8. Запрещено распространять символы/фотографии/файлы/эмодзи/стикеры имеющие националистическую символику и смысл.\n9. Запрещено быть токсиком(но это не точно)\n10. 1. Участники сервера Polunna Community равны перед правилами вне зависимости от опыта и роли.```", inline=False)
        embedRules.add_field(name="Размещение ссылок:", value="```Java\n1. Запрещается реклама без согласования с администратором\модератором сервера.\n2. Не допускается спам-рассылка в личных СМС с другими пользователями.```", inline=False)
        embedRules.add_field(name="Ники и автарки:", value="```Java\n1. Администратор вправе требовать изменение ника и\или баннера, если считает, что они оскорбляют кого-либо.\n2. Запрещено использование имен с матом, оскорблением, религиозными названиями, рекламой, пропагандой алкоголя / наркотиков.\n3. Не допускается применение символики террористов и запрещенных организации, призыв к насилию и экстремизму. \n4. Нельзя использовать бессмысленный набор символов с многократным повторением одной или нескольких букв.```", inline=False)
        embedRules.add_field(name="Правила для модерации", value="```Java\n1. Представители модерации обязаны уважительно относиться к игрокам.\n2. Нельзя флудить в модераторской конференции.\n3. Нельзя разглашать информацию из модераторских конференций.\n4. Соблюдайте и поддерживайте порядок в общедоступных каналах и там, где у Вас есть права на модерирование.```", inline=False)
        embedRules.add_field(name="В зависимости от нарушения вы можете получить мут/кик/бан!", value="За нарушение модератором модераторских правил - <@&969112189711573036> будет наказан!", inline=False)
        embedRules.add_field(name="Нашли ошибку в правилах или у Вас имеются вопросы касательно них? Смело задавайте интересующий Вас вопрос модератору/администратору!", value="За порядком на сервере следят люди с ролью <@&969112189711573036> & <@&969112189711573037>", inline=False)
        button1 = Button(label = 'Правила прочитаны!', style = discord.ButtonStyle.blurple, emoji = '<:CWS_Verified:863014625561018369>')
        async def button_callback(interaction):
            await interaction.response.send_message('Вы успешно прошли верификацию! Вам выдана роль <@&969112189631864843>', ephemeral=True)
            member = ctx.author
            mrole = discord.utils.find(
                lambda r: r.name == 'Авторизован', ctx.message.guild.roles
            )
            role = get (member.guild.roles, name = 'Авторизован')
            if mrole in member.roles:
                await ctx.response.send_message("Вы уже прошли верификацию!", ephemeral=True)
            else:
                await member.add_roles(role)
        button1.callback = button_callback
        view = View()
        view.add_item(button1)
        await ctx.send(embed=embedRules, view=view)
    


async def setup(bot):
    await bot.add_cog(rules(bot))
